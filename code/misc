target ls
adresstest
{'true': [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], 'pred': [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1]}
####################
augment ls
{'true': [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1],
 'pred': [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1]}
###############
multiaugment ls
{'true': [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1],
 'pred': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0]}
#######################

#########################
feature: l
svm
result for method tradaboost param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': array([0.71559633, 0.63302752, 0.53703704, 0.64814815, 0.65740741]), 'fms': array([0.73043478, 0.68253968, 0.5       , 0.65454545, 0.68376068])}
{'acc': 0.6382432891607204, 'fms': 0.6502561206909034, 'acc_stdev': 0.05782520612264609, 'fms_stdev': 0.07897936708921337}
##############################
main table e change
lr result for method tradaboost param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': 0.6583333333333333, 'fms': 0.6843041356945695}
{'acc': array([0.625     , 0.54166667, 0.70833333, 0.79166667, 0.625     ]),
 'fms': array([0.66666667, 0.47619048, 0.77419355, 0.81481481, 0.68965517])}

################################################
feature: l+s

lr result for method tradaboost param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': array([0.66972477, 0.58715596, 0.51851852, 0.62962963, 0.60185185]), 'fms': array([0.7       , 0.66666667, 0.57377049, 0.62264151, 0.63247863])}
{'acc': 0.6013761467889909, 'fms': 0.639111460076508, 'acc_stdev': 0.050075183777098395, 'fms_stdev': 0.042547384209220614}
##############################
svm result for method tradaboost param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': array([0.70642202, 0.6146789 , 0.51851852, 0.64814815, 0.66666667]), 'fms': array([0.71929825, 0.6557377 , 0.49019608, 0.65454545, 0.69491525])}
{'acc': 0.6308868501529052, 'fms': 0.6429385475492366, 'acc_stdev': 0.06351857829767359, 'fms_stdev': 0.0802012245770283}
#############################
feature: l+s+a

svm result for method tradaboost param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': array([0.68807339, 0.59633028, 0.58333333, 0.63888889, 0.72222222]), 'fms': array([0.72580645, 0.62711864, 0.60176991, 0.64864865, 0.75409836])}
{'acc': 0.645769622833843, 'fms': 0.6714884032979022, 'acc_stdev': 0.052961293201363675, 'fms_stdev': 0.05852495784184216}
#############################
lr result for method tradaboost param 1.000000 nest 50 source ['ccc'] target ['pitt']
{'acc': array([0.62385321, 0.60550459, 0.53703704, 0.49074074, 0.5       ]), 'fms': array([0.65546218, 0.656     , 0.52830189, 0.47619048, 0.53448276])}
{'acc': 0.5514271151885832, 'fms': 0.5700874612955136, 'acc_stdev': 0.054230196200359425, 'fms_stdev': 0.07280134701181468}
#############################
feature: l
main table e thok korte
lr result for method tradaboost param 1.000000 nest 45 source ['pitt'] target ['ccc']
{'acc': array([0.77586207, 0.81034483, 0.72413793, 0.84482759, 0.85964912]), 'fms': array([0.62857143, 0.74418605, 0.46666667, 0.81632653, 0.8       ])}
{'acc': 0.8029643073200241, 'fms': 0.6911501344723936, 'acc_stdev': 0.04892505171686249, 'fms_stdev': 0.13010699680808616}
############################
main table e change korte hbe
svm result for method tradaboost param 1.000000 nest 45 source ['pitt'] target ['ccc']
{'acc': array([0.86206897, 0.81034483, 0.72413793, 0.9137931 , 0.92982456]), 'fms': array([0.75      , 0.73170732, 0.42857143, 0.88888889, 0.88888889])}
{'acc': 0.8480338777979431, 'fms': 0.7376113046844754, 'acc_stdev': 0.07480861648281234, 'fms_stdev': 0.16820451648796444}
############################
feature: l+s

lr result for method tradaboost param 1.000000 nest 45 source ['pitt'] target ['ccc']
{'acc': array([0.77586207, 0.79310345, 0.70689655, 0.82758621, 0.84210526]), 'fms': array([0.60606061, 0.72727273, 0.4137931 , 0.79166667, 0.7804878 ])}
{'acc': 0.7891107078039927, 'fms': 0.6638561816652648, 'acc_stdev': 0.04741186095282505, 'fms_stdev': 0.14130250211029918}
###########################
svm result for method tradaboost param 1.000000 nest 45 source ['pitt'] target ['ccc']
{'acc': array([0.82758621, 0.81034483, 0.74137931, 0.9137931 , 0.89473684]), 'fms': array([0.70588235, 0.73170732, 0.44444444, 0.88888889, 0.83333333])}
{'acc': 0.837568058076225, 'fms': 0.7208512673362029, 'acc_stdev': 0.06192179621223892, 'fms_stdev': 0.15338286174357268}
#############################
feature: l+s+a

svm result for method tradaboost param 1.000000 nest 45 source ['pitt'] target ['ccc']
{'acc': array([0.81355932, 0.81355932, 0.71186441, 0.9137931 , 0.91525424]), 'fms': array([0.66666667, 0.74418605, 0.4137931 , 0.88372093, 0.87804878])}
{'acc': 0.8336060783167738, 'fms': 0.7172831054693867, 'acc_stdev': 0.07579071226269507, 'fms_stdev': 0.17259149759857206}
###########################
main table e change korte hbe
lr result for method tradaboost param 1.000000 nest 45 source ['pitt'] target ['ccc']
{'acc': array([0.81355932, 0.77966102, 0.66101695, 0.81034483, 0.83050847]), 'fms': array([0.7027027 , 0.64864865, 0.375     , 0.75555556, 0.77272727])}
{'acc': 0.7790181180596143, 'fms': 0.650926835926836, 'acc_stdev': 0.061237902476140575, 'fms_stdev': 0.14464028807921}
############################
feature: l

lr result for method multiaugment param 1.000000 nest 45 source ['adrc', 'ccc'] target ['pitt']
{'acc': array([0.77981651, 0.66055046, 0.64814815, 0.77777778, 0.75925926]), 'fms': array([0.80952381, 0.704     , 0.65454545, 0.79661017, 0.78688525])}
{'acc': 0.7251104315324499, 'fms': 0.7503129358924858, 'acc_stdev': 0.05835054478293597, 'fms_stdev': 0.060503212756100336}
###########################
result for method multiaugment param 0.500000 nest 45 source ['ccc', 'adrc'] target ['pitt']
{'acc': array([0.7706422 , 0.67889908, 0.63888889, 0.7037037 , 0.75      ]), 'fms': array([0.80620155, 0.73684211, 0.67768595, 0.75384615, 0.80291971])}
{'acc': 0.7084267753992525, 'fms': 0.7554990935878658, 'acc_stdev': 0.0476000042032091, 'fms_stdev': 0.047381756981727564}
##############################
feature: l+s

svm poly result for method multiaugment param 0.500000 nest 45 source ['adrc', 'ccc'] target ['pitt']
{'acc': array([0.7706422 , 0.67889908, 0.63888889, 0.7037037 , 0.75      ]), 'fms': array([0.80620155, 0.73684211, 0.67768595, 0.75384615, 0.80291971])}
{'acc': 0.7084267753992525, 'fms': 0.7554990935878658, 'acc_stdev': 0.0476000042032091, 'fms_stdev': 0.047381756981727564}
##############################
lr result for method multiaugment param 1.000000 nest 45 source ['ccc', 'adrc'] target ['pitt']
{'acc': array([0.7706422 , 0.67889908, 0.65740741, 0.77777778, 0.75925926]), 'fms': array([0.80314961, 0.72440945, 0.67256637, 0.79661017, 0.78333333])}
{'acc': 0.7287971457696228, 'fms': 0.756013785924877, 'acc_stdev': 0.050327652124642124, 'fms_stdev': 0.050156783508281566}
#################################
svm poly result for method multiaugment param 0.300000 nest 45 source ['ccc', 'adrc'] target ['pitt']
{'acc': array([0.75229358, 0.65137615, 0.62037037, 0.73148148, 0.75      ]), 'fms': array([0.79389313, 0.72058824, 0.68217054, 0.78195489, 0.8057554 ])}
{'acc': 0.7011043153244988, 'fms': 0.7568724381204535, 'acc_stdev': 0.054634716854304405, 'fms_stdev': 0.04751025356044195}
############################
feature: l+s
svm result for method multiaugment param 0.500000 nest 45 source ['pitt', 'adrc'] target ['ccc']
{'acc': array([0.81034483, 0.87931034, 0.75862069, 0.93103448, 0.94736842]), 'fms': array([0.64516129, 0.8       , 0.5       , 0.90909091, 0.91428571])}
{'acc': 0.8653357531760435, 'fms': 0.7537075827398407, 'acc_stdev': 0.07162831501443137, 'fms_stdev': 0.16013877573636037}
###########################
lr result for method multiaugment param 1.000000 nest 45 source ['pitt', 'adrc'] target ['ccc']
{'acc': array([0.79310345, 0.77586207, 0.77586207, 0.9137931 , 0.94736842]), 'fms': array([0.625     , 0.68292683, 0.51851852, 0.88888889, 0.91891892])}
{'acc': 0.8411978221415609, 'fms': 0.7268506311189238, 'acc_stdev': 0.0740173777228455, 'fms_stdev': 0.1541763566364389}
##########################
feature: l+s

svm poly result for method augment param 1.000000 nest 45 source ['pitt'] target ['ccc']
{'acc': array([0.81034483, 0.82758621, 0.74137931, 0.9137931 , 0.9122807 ]), 'fms': array([0.64516129, 0.75      , 0.48275862, 0.88888889, 0.86486486])}
{'acc': 0.8410768300060496, 'fms': 0.726334732953198, 'acc_stdev': 0.06545791943912307, 'fms_stdev': 0.14972838486923806}
###################
lr result for method augment param 1.000000 nest 45 source ['ccc'] target ['adress']
{'acc': array([0.81818182, 0.72727273, 0.81818182, 0.54545455, 0.81818182,
       0.81818182, 0.81818182, 0.6       , 0.8       , 0.63636364]), 'fms': array([0.8       , 0.76923077, 0.8       , 0.44444444, 0.83333333,
       0.8       , 0.85714286, 0.33333333, 0.83333333, 0.33333333])}
{'acc': 0.74, 'fms': 0.6804151404151404, 'acc_stdev': 0.10124840576236988, 'fms_stdev': 0.20625328994454148}
########################
feature: l

svm poly result for method augment param 1.000000 nest 45 source ['ccc'] target ['adress']
{'acc': array([0.72727273, 0.90909091, 0.81818182, 0.63636364, 0.72727273,
       0.90909091, 0.81818182, 0.7       , 0.9       , 0.63636364]), 'fms': array([0.72727273, 0.90909091, 0.8       , 0.6       , 0.66666667,
       0.90909091, 0.85714286, 0.66666667, 0.90909091, 0.33333333])}
{'acc': 0.7781818181818182, 'fms': 0.7378354978354977, 'acc_stdev': 0.10189931832146949, 'fms_stdev': 0.17290058464313196}
########################
lr result for method augment param 1.000000 nest 45 source ['ccc'] target ['adress']
{'acc': array([0.72727273, 0.72727273, 0.81818182, 0.54545455, 0.81818182,
       0.90909091, 0.90909091, 0.6       , 0.9       , 0.72727273]), 'fms': array([0.72727273, 0.76923077, 0.8       , 0.44444444, 0.83333333,
       0.90909091, 0.92307692, 0.33333333, 0.90909091, 0.57142857])}
{'acc': 0.7681818181818183, 'fms': 0.722030192030192, 'acc_stdev': 0.12041594578792296, 'fms_stdev': 0.19543444272520824}
########################
feature: l+s+a

svm poly result for method augment param 0.500000 nest 45 source ['ccc'] target ['adress']
{'acc': array([0.81818182, 0.90909091, 0.90909091, 0.63636364, 0.90909091,
       1.        , 0.81818182, 0.6       , 0.9       , 0.54545455]), 'fms': array([0.83333333, 0.92307692, 0.90909091, 0.6       , 0.90909091,
       1.        , 0.85714286, 0.5       , 0.90909091, 0.28571429])}
{'acc': 0.8045454545454545, 'fms': 0.7726540126540126, 'acc_stdev': 0.14755584459020007, 'fms_stdev': 0.2195993149455581}
######################
main table e thik
lr result for method augment param 1.000000 nest 45 source ['pitt'] target ['ccc']
{'acc': array([0.83050847, 0.77966102, 0.69491525, 0.86206897, 0.84745763]), 'fms': array([0.73684211, 0.62857143, 0.4375    , 0.80952381, 0.7804878 ])}
{'acc': 0.8029222676797193, 'fms': 0.6785850296472888, 'acc_stdev': 0.06074426665073916, 'fms_stdev': 0.13531177210221232}
####################
lr result for method augment param 1.000000 nest 45 source ['ccc'] target ['adress']
{'acc': array([0.90909091, 0.63636364, 1.        , 0.45454545, 0.90909091,
       0.90909091, 0.72727273, 0.7       , 0.7       , 0.54545455]), 'fms': array([0.90909091, 0.66666667, 1.        , 0.4       , 0.90909091,
       0.90909091, 0.8       , 0.66666667, 0.66666667, 0.        ])}
{'acc': 0.749090909090909, 'fms': 0.6927272727272726, 'acc_stdev': 0.1691104583029625, 'fms_stdev': 0.2853000933240098}
###################
feature: l

lr result for method multiaugment param 1.000000 nest 45 source ['pitt', 'adrc'] target ['ccc']
{'acc': array([0.82758621, 0.79310345, 0.77586207, 0.9137931 , 0.92982456]), 'fms': array([0.6875    , 0.71428571, 0.51851852, 0.88888889, 0.88888889])}
{'acc': 0.8480338777979431, 'fms': 0.739616402116402, 'acc_stdev': 0.06270282450689646, 'fms_stdev': 0.13914495165939875}
###########################
lr result for method augment param 1.000000 nest 45 source ['pitt'] target ['ccc']
{'acc': array([0.84482759, 0.77586207, 0.77586207, 0.9137931 , 0.94736842]), 'fms': array([0.72727273, 0.68292683, 0.51851852, 0.88888889, 0.91891892])}
{'acc': 0.8515426497277676, 'fms': 0.7473051765734693, 'acc_stdev': 0.07008265138467093, 'fms_stdev': 0.14586735733913303}
###############################
svm poly result for method multiaugment param 0.500000 nest 45 source ['pitt', 'adrc'] target ['ccc']
{'acc': array([0.81034483, 0.87931034, 0.75862069, 0.93103448, 0.94736842]), 'fms': array([0.64516129, 0.8       , 0.5       , 0.90909091, 0.91428571])}
{'acc': 0.8653357531760435, 'fms': 0.7537075827398407, 'acc_stdev': 0.07162831501443137, 'fms_stdev': 0.16013877573636037}
##############################
feature: l

lr result for method multiaugment param 0.500000 nest 45 source ['ccc', 'adrc'] target ['adress']
{'acc': array([0.90909091, 0.72727273, 0.81818182, 0.63636364, 0.81818182,
       1.        , 0.81818182, 0.6       , 0.9       , 0.63636364]), 'fms': array([0.90909091, 0.76923077, 0.8       , 0.6       , 0.83333333,
       1.        , 0.85714286, 0.33333333, 0.90909091, 0.33333333])}
{'acc': 0.7863636363636364, 'fms': 0.7344555444555445, 'acc_stdev': 0.1264420946749346, 'fms_stdev': 0.2239909852466426}
################################
svm poly result for method multiaugment param 1.000000 nest 45 source ['ccc', 'adrc'] target ['adress']
result for method multiaugment param 1.000000 nest 45 source ['ccc', 'adrc'] target ['adress']
{'acc': array([0.72727273, 0.81818182, 0.90909091, 0.63636364, 1.        ,
       0.90909091, 0.81818182, 0.7       , 0.9       , 0.54545455]), 'fms': array([0.72727273, 0.85714286, 0.88888889, 0.6       , 1.        ,
       0.90909091, 0.85714286, 0.66666667, 0.90909091, 0.28571429])}
{'acc': 0.7963636363636363, 'fms': 0.7701010101010101, 'acc_stdev': 0.13460686559185164, 'fms_stdev': 0.19921115270738596}
################################

feature: l+s

lr result for method multiaugment param 1.000000 nest 45 source ['ccc', 'adrc'] target ['adress']
{'acc': array([0.81818182, 0.72727273, 0.90909091, 0.63636364, 0.81818182,
       0.90909091, 0.81818182, 0.6       , 0.9       , 0.45454545]), 'fms': array([0.83333333, 0.76923077, 0.88888889, 0.6       , 0.83333333,
       0.90909091, 0.85714286, 0.33333333, 0.90909091, 0.        ])}
{'acc': 0.759090909090909, 'fms': 0.6933444333444333, 'acc_stdev': 0.1447283005902285, 'fms_stdev': 0.28673347208842603}
[0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0]
[0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
################################
lr result for method augment param 1.000000 nest 45 source ['pitt'] target ['ccc']
{'acc': array([0.79310345, 0.77586207, 0.77586207, 0.9137931 , 0.94736842]), 'fms': array([0.625     , 0.68292683, 0.51851852, 0.88888889, 0.91891892])}
{'acc': 0.8411978221415609, 'fms': 0.7268506311189238, 'acc_stdev': 0.0740173777228455, 'fms_stdev': 0.1541763566364389}
#################################
svm poly1 result for method multiaugment param 1.000000 nest 45 source ['ccc', 'adrc'] target ['adress']
{'acc': array([0.72727273, 0.81818182, 0.90909091, 0.63636364, 1.        ,
       0.90909091, 0.81818182, 0.6       , 1.        , 0.63636364]), 'fms': array([0.72727273, 0.85714286, 0.88888889, 0.6       , 1.        ,
       0.90909091, 0.85714286, 0.5       , 1.        , 0.33333333])}
{'acc': 0.8054545454545454, 'fms': 0.7672871572871572, 'acc_stdev': 0.14248096871610957, 'fms_stdev': 0.2118250236519881}
###############################
feature: l+s

svm poly result for method baseline joint param 1.000000 nest 45 source ['ccc'] target ['adress']
{'acc': array([0.54545455, 0.63636364, 0.54545455, 0.54545455, 0.54545455,
       0.90909091, 0.45454545, 0.8       , 0.5       , 0.45454545]), 'fms': array([0.28571429, 0.6       , 0.        , 0.44444444, 0.44444444,
       0.90909091, 0.4       , 0.8       , 0.54545455, 0.25      ])}
{'acc': 0.5936363636363635, 'fms': 0.46791486291486295, 'acc_stdev': 0.14165783475953717, 'fms_stdev': 0.25173758842069993}
###############################
main table e change
lr result for method baseline param 1.000000 nest 45 source ['ccc'] target ['adress']
{'acc': array([0.81818182, 0.81818182, 0.72727273, 0.27272727, 0.72727273,
       0.90909091, 0.63636364, 0.7       , 0.6       , 0.72727273]), 'fms': array([0.8       , 0.83333333, 0.66666667, 0.        , 0.76923077,
       0.92307692, 0.71428571, 0.57142857, 0.6       , 0.57142857])}
{'acc': 0.6936363636363636, 'fms': 0.6449450549450548, 'acc_stdev': 0.16434442767885657, 'fms_stdev': 0.24215696113865057}
#####################################
feature: l+s

lr result for method baseline joint param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': array([0.7706422 , 0.63302752, 0.63888889, 0.74074074, 0.75      ]), 'fms': array([0.79674797, 0.68253968, 0.65486726, 0.75862069, 0.7768595 ])}
{'acc': 0.7066598708800542, 'fms': 0.733927020088786, 'acc_stdev': 0.058563196328135614, 'fms_stdev': 0.05530018370908844}
###################################
svm result for method baseline param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': array([0.68807339, 0.6146789 , 0.58333333, 0.64814815, 0.66666667]), 'fms': array([0.69642857, 0.625     , 0.51612903, 0.6122449 , 0.64705882])}
{'acc': 0.640180088345226, 'fms': 0.6193722650350464, 'acc_stdev': 0.0372576483192063, 'fms_stdev': 0.05906920644936185}
####################################
feature: l+s

lr result for method baseline param 1.000000 nest 45 source ['pitt'] target ['ccc']
{'acc': array([0.74137931, 0.65517241, 0.74137931, 0.93103448, 0.89473684]), 'fms': array([0.57142857, 0.56521739, 0.4       , 0.9047619 , 0.82352941])}
{'acc': 0.7927404718693285, 'fms': 0.652987455851906, 'acc_stdev': 0.10366233782653071, 'fms_stdev': 0.1848421058784921}
###################################
svm result for method baseline param 1.000000 nest 45 source ['pitt'] target ['ccc']
{'acc': array([0.75862069, 0.81034483, 0.77586207, 0.93103448, 0.94736842]), 'fms': array([0.58823529, 0.71794872, 0.51851852, 0.90909091, 0.91428571])}
{'acc': 0.8446460980036298, 'fms': 0.7296158307923013, 'acc_stdev': 0.079149250606236, 'fms_stdev': 0.1618647104970662}
###################################
feature: l+s


lr result for method source_only param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': array([0.47706422, 0.44954128, 0.43518519, 0.44444444, 0.4537037 ]), 'fms': array([0.0952381, 0.       , 0.       , 0.       , 0.       ])}
{'acc': 0.45198776758409787, 'fms': 0.019047619047619046, 'acc_stdev': 0.013978459793192816, 'fms_stdev': 0.03809523809523809}
##################################
svm result for method source_only param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': array([0.4587156 , 0.44954128, 0.44444444, 0.44444444, 0.4537037 ]), 'fms': array([0.03278689, 0.        , 0.        , 0.        , 0.        ])}
{'acc': 0.45016989466530755, 'fms': 0.006557377049180328, 'acc_stdev': 0.005504062764734464, 'fms_stdev': 0.013114754098360657}

##################################
feature: l+s

lr result for method source_only param 1.000000 nest 45 source ['pitt'] target ['ccc']
{'acc': array([0.32758621, 0.37931034, 0.34482759, 0.51724138, 0.38596491]), 'fms': array([0.49350649, 0.51351351, 0.42424242, 0.58823529, 0.52054795])}
{'acc': 0.3909860859044162, 'fms': 0.5080091341171116, 'acc_stdev': 0.06671144726328095, 'fms_stdev': 0.052632584949613884}
####################################
svm result for method source_only param 1.000000 nest 45 source ['pitt'] target ['ccc']
{'acc': array([0.36206897, 0.34482759, 0.34482759, 0.39655172, 0.33333333]), 'fms': array([0.50666667, 0.5       , 0.5       , 0.53333333, 0.48648649])}
{'acc': 0.3563218390804598, 'fms': 0.5052972972972973, 'acc_stdev': 0.022109636852495805, 'fms_stdev': 0.015478138193954093}
###################################
feature: l+s

lr result for method source_only param 1.000000 nest 45 source ['ccc'] target ['adress']
{'acc': array([0.54545455, 0.45454545, 0.54545455, 0.54545455, 0.54545455,
       0.45454545, 0.54545455, 0.5       , 0.5       , 0.54545455]), 'fms': array([0.        , 0.        , 0.        , 0.        , 0.28571429,
       0.        , 0.28571429, 0.        , 0.        , 0.        ])}
{'acc': 0.5181818181818182, 'fms': 0.05714285714285714, 'acc_stdev': 0.036363636363636355, 'fms_stdev': 0.11428571428571428}
###################################
svm result for method source_only param 1.000000 nest 45 source ['ccc'] target ['adress']
{'acc': array([0.54545455, 0.45454545, 0.54545455, 0.54545455, 0.54545455,
       0.45454545, 0.45454545, 0.5       , 0.5       , 0.54545455]), 'fms': array([0.        , 0.        , 0.        , 0.        , 0.28571429,
       0.        , 0.        , 0.        , 0.        , 0.        ])}
{'acc': 0.509090909090909, 'fms': 0.02857142857142857, 'acc_stdev': 0.03962635403218793, 'fms_stdev': 0.0857142857142857}

###################################
feature: l

lr result for method tradaboost param 1.000000 nest 45 source ['ccc'] target ['adress']
{'acc': array([0.63636364, 0.63636364, 0.81818182, 0.54545455, 0.90909091,
       0.81818182, 0.90909091, 0.5       , 0.8       , 0.63636364]), 'fms': array([0.6       , 0.66666667, 0.75      , 0.61538462, 0.92307692,
       0.8       , 0.92307692, 0.28571429, 0.83333333, 0.33333333])}
{'acc': 0.7209090909090909, 'fms': 0.6730586080586081, 'acc_stdev': 0.14036846435408476, 'fms_stdev': 0.21139867334723392}
###########################
svm result for method tradaboost param 1.000000 nest 45 source ['ccc'] target ['adress']
{'acc': array([0.90909091, 0.81818182, 0.63636364, 0.63636364, 0.81818182,
       0.90909091, 0.72727273, 0.6       , 1.        , 0.63636364]), 'fms': array([0.88888889, 0.8       , 0.6       , 0.5       , 0.8       ,
       0.90909091, 0.76923077, 0.33333333, 1.        , 0.5       ])}
{'acc': 0.7690909090909092, 'fms': 0.7100543900543901, 'acc_stdev': 0.13436105299521686, 'fms_stdev': 0.20435862029021729}
##############################
feature: l+s

lr result for method tradaboost param 1.000000 nest 45 source ['ccc'] target ['adress']
{'acc': array([0.81818182, 0.72727273, 0.81818182, 0.63636364, 0.81818182,
       0.81818182, 1.        , 0.5       , 0.8       , 0.63636364]), 'fms': array([0.8       , 0.76923077, 0.75      , 0.66666667, 0.83333333,
       0.8       , 1.        , 0.28571429, 0.83333333, 0.33333333])}
{'acc': 0.7572727272727273, 'fms': 0.7071611721611721, 'acc_stdev': 0.13111410713919802, 'fms_stdev': 0.2143650717149135}
############################
svm rbf result for method tradaboost param 1.000000 nest 45 source ['ccc'] target ['adress']
{'acc': array([0.81818182, 0.72727273, 0.81818182, 0.63636364, 0.81818182,
       0.81818182, 1.        , 0.5       , 0.8       , 0.63636364]), 'fms': array([0.8       , 0.76923077, 0.75      , 0.66666667, 0.83333333,
       0.8       , 1.        , 0.28571429, 0.83333333, 0.33333333])}
{'acc': 0.7572727272727273, 'fms': 0.7071611721611721, 'acc_stdev': 0.13111410713919802, 'fms_stdev': 0.2143650717149135}
###########################
feature: l+s+a

lr result for method tradaboost param 1.000000 nest 45 source ['ccc'] target ['adress']
lr result for method tradaboost param 1.000000 nest 45 source ['ccc'] target ['adress']
{'acc': array([0.90909091, 0.63636364, 0.81818182, 0.54545455, 0.81818182,
       0.90909091, 0.81818182, 0.7       , 0.8       , 0.63636364]), 'fms': array([0.90909091, 0.6       , 0.75      , 0.61538462, 0.83333333,
       0.90909091, 0.85714286, 0.66666667, 0.83333333, 0.33333333])}
{'acc': 0.759090909090909, 'fms': 0.7307375957375957, 'acc_stdev': 0.11679253344186262, 'fms_stdev': 0.17130521608736493}
#############################
poly
svm result for method tradaboost param 1.000000 nest 45 source ['ccc'] target ['adress']
{'acc': array([0.72727273, 0.72727273, 0.63636364, 0.63636364, 0.81818182,
       0.81818182, 0.72727273, 0.7       , 0.8       , 0.45454545]), 'fms': array([0.66666667, 0.72727273, 0.5       , 0.33333333, 0.8       ,
       0.8       , 0.76923077, 0.57142857, 0.8       , 0.25      ])}
{'acc': 0.7045454545454545, 'fms': 0.6217932067932067, 'acc_stdev': 0.10407006540017498, 'fms_stdev': 0.1920832746036804}
##########################
feature: l
svm
result for method augment param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': array([0.75229358, 0.64220183, 0.67592593, 0.72222222, 0.74074074]), 'fms': array([0.78740157, 0.70676692, 0.7107438 , 0.75      , 0.78787879])}
{'acc': 0.7066768603465852, 'fms': 0.7485582163256126, 'acc_stdev': 0.04143800195492323, 'fms_stdev': 0.035308455692937744}
###############################
lr
result for method augment param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': array([0.71559633, 0.68807339, 0.66666667, 0.76851852, 0.75      ]), 'fms': array([0.752     , 0.72580645, 0.66666667, 0.78632479, 0.7768595 ])}
{'acc': 0.7177709819911655, 'fms': 0.7415314817473175, 'acc_stdev': 0.037715643765811886, 'fms_stdev': 0.042932776022041534}

##############################
feature: l+s

svm
#acc goes up 1%, f1 1 % less
result for method augment param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': array([0.77981651, 0.63302752, 0.66666667, 0.72222222, 0.73148148]), 'fms': array([0.8125    , 0.70588235, 0.70491803, 0.76190476, 0.78195489])}
{'acc': 0.7066428814135236, 'fms': 0.7534320069701738, 'acc_stdev': 0.051441950067343305, 'fms_stdev': 0.04240034283758023}
###############################
lr
result for method augment param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': array([0.78899083, 0.66055046, 0.67592593, 0.78703704, 0.75925926]), 'fms': array([0.816     , 0.704     , 0.68468468, 0.80672269, 0.78333333])}
{'acc': 0.7343527013251785, 'fms': 0.7589481414187297, 'acc_stdev': 0.05521188203489724, 'fms_stdev': 0.05415961374968042}

###############################
feature: l+s+a

svm
result for method augment param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': array([0.76146789, 0.64220183, 0.63888889, 0.74074074, 0.74074074]), 'fms': array([0.79365079, 0.70676692, 0.68292683, 0.77777778, 0.78787879])}
{'acc': 0.7048080190282023, 'fms': 0.749800221173777, 'acc_stdev': 0.05302363239464804, 'fms_stdev': 0.0457810209807948}
#################################
lr
result for method augment param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': array([0.76146789, 0.67889908, 0.65740741, 0.78703704, 0.76851852]), 'fms': array([0.796875  , 0.72440945, 0.66666667, 0.8034188 , 0.78991597])}
{'acc': 0.7306659870880055, 'fms': 0.7562571770581844, 'acc_stdev': 0.05216492792235164, 'fms_stdev': 0.053005052564409405}
#################################
feature: l+s

svm
result for method target_only param 1.000000 nest 45 source ['pitt'] target ['ccc']
{'acc': array([0.75862069, 0.77586207, 0.75862069, 0.84482759, 0.87719298]), 'fms': array([0.53333333, 0.55172414, 0.5       , 0.75675676, 0.78787879])}
{'acc': 0.8030248033877798, 'fms': 0.6259386031799824, 'acc_stdev': 0.04884599515167988, 'fms_stdev': 0.1210636752721499}
#################################
lr
result for method target_only param 1.000000 nest 45 source ['pitt'] target ['ccc']
{'acc': array([0.82758621, 0.75862069, 0.75862069, 0.87931034, 0.94736842]), 'fms': array([0.6875    , 0.66666667, 0.5       , 0.84444444, 0.92307692])}
{'acc': 0.834301270417423, 'fms': 0.7243376068376068, 'acc_stdev': 0.07253990628493664, 'fms_stdev': 0.14760303297597455}
#################################
feature: l+s

svm
result for method target_only param 1.000000 nest 45 source ['ccc'] target ['adress']
{'acc': array([0.81818182, 0.63636364, 0.72727273, 0.54545455, 0.72727273,
       0.72727273, 0.90909091, 0.6       , 0.7       , 0.45454545]), 'fms': array([0.75      , 0.6       , 0.57142857, 0.28571429, 0.66666667,
       0.66666667, 0.90909091, 0.33333333, 0.57142857, 0.        ])}
{'acc': 0.6845454545454546, 'fms': 0.5354329004329005, 'acc_stdev': 0.12478411108857286, 'fms_stdev': 0.24834577706956748}
#################################
feature: l+s

lr
result for method target_only param 1.000000 nest 45 source ['ccc'] target ['adress']
{'acc': array([0.81818182, 0.72727273, 0.90909091, 0.63636364, 0.81818182,
       1.        , 0.90909091, 0.6       , 0.9       , 0.63636364]), 'fms': array([0.8       , 0.76923077, 0.88888889, 0.66666667, 0.83333333,
       1.        , 0.92307692, 0.33333333, 0.90909091, 0.33333333])}
{'acc': 0.7954545454545455, 'fms': 0.7456954156954158, 'acc_stdev': 0.13156715910656389, 'fms_stdev': 0.22379707353982592}

#################################
feature: l+s

result for method target_only svm param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': array([0.66055046, 0.72477064, 0.55555556, 0.67592593, 0.71296296]), 'fms': array([0.60215054, 0.72222222, 0.41463415, 0.66019417, 0.65934066])}
{'acc': 0.665953109072375, 'fms': 0.611708348059207, 'acc_stdev': 0.05997615208667626, 'fms_stdev': 0.10560551271020842}
#####################################################
feature: l+s

result lr for method target_only param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': array([0.78899083, 0.67889908, 0.67592593, 0.77777778, 0.78703704]), 'fms': array([0.816     , 0.72440945, 0.69026549, 0.8       , 0.80991736])}
{'acc': 0.7417261297995243, 'fms': 0.7681184581832925, 'acc_stdev': 0.05265672949891453, 'fms_stdev': 0.051044657361840585}
############################################################
#two sided
augment (l+s) ccc,adress train
acc  TtestResult(statistic=4.1565192255814045, pvalue=0.002460411323501637, df=9), compared to baseline
f1 TtestResult(statistic=3.5834918170978347, pvalue=0.005898466916701262, df=9)

ccc,db mult, base
TtestResult(statistic=1.9816081488289043, pvalue=0.11858320697415094, df=4)

consistent
reverse pos less neg more
svm result for method tradaboost param 1.000000 nest 45 source ['ccc'] target ['pitt']

svm result for method tradaboost param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': 0.7416666666666667, 'fms': 0.1388888888888889}
{'acc': array([0.75      , 0.75      , 0.70833333, 0.79166667, 0.70833333]), 
'fms': array([0.25      , 0.        , 0.        , 0.44444444, 0.        ])}

svmresult for method tradaboost param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': 0.7166666666666666, 'fms': 0.8242433374140692}
{'acc': array([0.79166667, 0.79166667, 0.70833333, 0.66666667, 0.625     ]),
 'fms': array([0.87804878, 0.85714286, 0.82926829, 0.8       , 0.75675676])}
svmresult for method tradaboost param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': 0.6083333333333333, 'fms': 0.6345428824049513}
{'acc': array([0.5       , 0.5       , 0.79166667, 0.625     , 0.625     ]),
 'fms': array([0.5       , 0.53846154, 0.82758621, 0.64      , 0.66666667])}
svm result for method tradaboost param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': 0.6073478260869566, 'fms': 0.35740573152337857}
{'acc': array([0.70833333, 0.64      , 0.54166667, 0.625     , 0.52173913]), 'fms': array([0.58823529, 0.30769231, 0.26666667, 0.47058824, 0.15384615])}



lr result for method tradaboost param 1.000000 nest 45 source ['ccc'] target ['pitt']

lr result for method tradaboost param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': 0.7416666666666667, 'fms': 0.1388888888888889}
{'acc': array([0.75      , 0.75      , 0.70833333, 0.79166667, 0.70833333]),
 'fms': array([0.25      , 0.        , 0.        , 0.44444444, 0.        ])}

lr result for method tradaboost param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': 0.7333333333333333, 'fms': 0.8134412487353664}
{'acc': array([0.79166667, 0.79166667, 0.875     , 0.70833333, 0.5       ]), 
'fms': array([0.86486486, 0.84848485, 0.91891892, 0.78787879, 0.64705882])}

lr result for method tradaboost param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': 0.6583333333333333, 'fms': 0.6843041356945695}
{'acc': array([0.625     , 0.54166667, 0.70833333, 0.79166667, 0.625     ]),
 'fms': array([0.66666667, 0.47619048, 0.77419355, 0.81481481, 0.68965517])}
lr result for method tradaboost param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': 0.6327391304347826, 'fms': 0.5584962406015037}
{'acc': array([0.66666667, 0.68      , 0.66666667, 0.54166667, 0.60869565]), 'fms': array([0.6       , 0.6       , 0.6       , 0.42105263, 0.57142857])}


svm result for method baseline param 1.000000 nest 45 source ['ccc'] target ['pitt']

result for method baseline param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': 0.7583333333333333, 'fms': 0.17333333333333334}
{'acc': array([0.875     , 0.75      , 0.75      , 0.66666667, 0.75      ]),
 'fms': array([0.66666667, 0.        , 0.        , 0.2       , 0.        ])}

svm result for method baseline param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': 0.6083333333333333, 'fms': 0.7236187447952155}
{'acc': array([0.625     , 0.66666667, 0.41666667, 0.70833333, 0.625     ]), 
'fms': array([0.74285714, 0.73333333, 0.58823529, 0.81081081, 0.74285714])}
svmresult for method baseline param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': 0.4833333333333333, 'fms': 0.3075563822366892}
{'acc': array([0.54166667, 0.375     , 0.58333333, 0.375     , 0.54166667]),
 'fms': array([0.35294118, 0.11764706, 0.54545455, 0.        , 0.52173913])}
svm result for method baseline param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': 0.6077391304347827, 'fms': 0.21136363636363636}
{'acc': array([0.58333333, 0.68      , 0.58333333, 0.58333333, 0.60869565]), 'fms': array([0.        , 0.33333333, 0.16666667, 0.375     , 0.18181818])}
      
lr result for method baseline param 1.000000 nest 45 source ['ccc'] target ['pitt']
result for method baseline param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': 0.7333333333333334, 'fms': 0.4183682983682983}
{'acc': array([0.83333333, 0.75      , 0.70833333, 0.70833333, 0.66666667]),
 'fms': array([0.66666667, 0.4       , 0.36363636, 0.46153846, 0.2       ])}

lr result for method baseline param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': 0.7166666666666666, 'fms': 0.8172909751857119}
{'acc': array([0.66666667, 0.79166667, 0.66666667, 0.79166667, 0.66666667]), 
'fms': array([0.77777778, 0.86486486, 0.78947368, 0.86486486, 0.78947368])}

lrresult for method baseline param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': 0.5833333333333333, 'fms': 0.6206182622974227}
{'acc': array([0.58333333, 0.45833333, 0.54166667, 0.66666667, 0.66666667]), 
'fms': array([0.66666667, 0.43478261, 0.62068966, 0.66666667, 0.71428571])}
lr result for method baseline param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': 0.5823478260869566, 'fms': 0.46614128905150576}
{'acc': array([0.625     , 0.64      , 0.625     , 0.5       , 0.52173913]), 'fms': array([0.52631579, 0.47058824, 0.52631579, 0.45454545, 0.35294118])}
svm result for method augment param 1.000000 nest 45 source ['ccc'] target ['pitt']
result for method augment param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': 0.7416666666666667, 'fms': 0.46030812324929976}
{'acc': array([0.83333333, 0.75      , 0.83333333, 0.625     , 0.66666667]), 
'fms': array([0.66666667, 0.25      , 0.71428571, 0.47058824, 0.2       ])}

svm result for method augment param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': 0.6083333333333333, 'fms': 0.7170106161586892}
{'acc': array([0.58333333, 0.70833333, 0.45833333, 0.66666667, 0.625     ]), 
'fms': array([0.70588235, 0.75862069, 0.62857143, 0.76470588, 0.72727273])}
svm result  for method augment param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': 0.5916666666666666, 'fms': 0.6110837438423645}
{'acc': array([0.70833333, 0.54166667, 0.625     , 0.41666667, 0.66666667]), 
'fms': array([0.75862069, 0.47619048, 0.68965517, 0.41666667, 0.71428571])}
svm result for method augment param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': 0.6237391304347827, 'fms': 0.5670220511753692}
{'acc': array([0.75      , 0.76      , 0.54166667, 0.45833333, 0.60869565]),
 'fms': array([0.72727273, 0.625     , 0.52173913, 0.43478261, 0.52631579])}
lr result for method augment param 1.000000 nest 45 source ['ccc'] target ['pitt']
result for method augment param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': 0.7333333333333334, 'fms': 0.45202797202797196}
{'acc': array([0.875     , 0.75      , 0.70833333, 0.625     , 0.70833333]), 
'fms': array([0.72727273, 0.4       , 0.46153846, 0.30769231, 0.36363636])}

lr result for method augment param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': 0.725, 'fms': 0.8176274018379281}
{'acc': array([0.66666667, 0.83333333, 0.75      , 0.79166667, 0.58333333]), 
'fms': array([0.77777778, 0.88888889, 0.84210526, 0.85714286, 0.72222222])}
lr result for method augment param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': 0.625, 'fms': 0.6638815541724088}
{'acc': array([0.625     , 0.54166667, 0.625     , 0.625     , 0.70833333]),
 'fms': array([0.68965517, 0.52173913, 0.72727273, 0.64      , 0.74074074])}
 
 lr result for method augment param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': 0.6073768115942029, 'fms': 0.5092610313662946}
{'acc': array([0.66666667, 0.68      , 0.58333333, 0.54166667, 0.56521739]),
 'fms': array([0.63636364, 0.6       , 0.44444444, 0.42105263, 0.44444444])}
 #############################################
equal
[110]

tradaboost ccc,pitt lr
{'acc': 0.6240144927536233, 'fms': 0.6121076604554865}
{'acc': array([0.70833333, 0.70833333, 0.54166667, 0.64      , 0.52173913]), 
'fms': array([0.72      , 0.69565217, 0.47619048, 0.60869565, 0.56      ])}

svm result for method tradaboost param 1.000000 nest 45 source ['ccc'] target ['pitt']
  warnings.warn(
result for method tradaboost param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': 0.6243478260869566, 'fms': 0.584368530020704}
{'acc': array([0.70833333, 0.70833333, 0.58333333, 0.6       , 0.52173913]),
 'fms': array([0.69565217, 0.66666667, 0.583333

augment lr [ccc, pitt]
result for method augment param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': 0.6400144927536233, 'fms': 0.6314208754208754}
{'acc': array([0.70833333, 0.66666667, 0.58333333, 0.72      , 0.52173913]), 
'fms': array([0.74074074, 0.63636364, 0.5       , 0.72      , 0.56      ])}

svm, ccc,pitt
result for method augment param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': 0.6490144927536232, 'fms': 0.6399668737060041}
{'acc': array([0.79166667, 0.625     , 0.66666667, 0.64      , 0.52173913]), 
'fms': array([0.8       , 0.57142857, 0.66666667, 0.64      , 0.52173913])}


lr baseline ccc,pitt
result for method baseline param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': 0.6244057971014493, 'fms': 0.5900252302998299}
{'acc': array([0.66666667, 0.70833333, 0.45833333, 0.68      , 0.60869565]), 'fms': array([0.69230769, 0.66666667, 0.31578947, 0.66666667, 0.60869565])}
              precision
svm result for method baseline param 1.000000 nest 45 source ['ccc'] target ['pitt']
result for method baseline param 1.000000 nest 45 source ['ccc'] target ['pitt']
{'acc': 0.5820144927536232, 'fms': 0.37058823529411766}
{'acc': array([0.66666667, 0.58333333, 0.45833333, 0.68      , 0.52173913]),
 'fms': array([0.5       , 0.44444444, 0.        , 0.55555556, 0.35294118])}


---------------------------------------------------------------------------------
TtestResult(statistic=2.265827862060642, pvalue=0.08612373581723057, df=4)


aug(l+s+a) db,ccc baseline 
C:\Users\treen\AppData\Local\Programs\Python\Python38\python.exe E:/DA_detection_AD/code_da/feature_analysis.py
TtestResult(statistic=2.721969726327759, pvalue=0.052879218304351605, df=4)
TtestResult(statistic=2.9884140552707237, pvalue=0.040401369032235665, df=4)

Process finished with exit code 0


Training: multiaugment ccc, adrc, pit
---------------------------
percent source data in training 0.461
percent y=1 in target data in training 0.555

adrc,ccc,adress test 
percent source data in training 0.776
percent y=1 in target data in training 0.500
------------------------------------------
percent source data in training 0.461
percent target data in training 0.539
result for method multiaugment param 1.000000 nest 45 source ['ccc', 'adrc'] target ['pitt']

--------------
percent source data in training 0.732
percent target data in training 0.268
Processing fold: 0
Processing fold: 1
Processing fold: 2
Processing fold: 3
Processing fold: 4
result for method multiaugment param 1.000000 nest 45 source ['pitt', 'adrc'] target ['ccc']



result
########################
ccc, ptt
feat [1,1,0]
method tradabst
best 45 est svm
ptt,ccc
sace 40 best svm
adress train on 10 cv
adress train best 45 svm
adress test best 45 lr ***************

lr adres train  45 [1,1,0]
,tradaboost
acc,0.7572727272727273
fms,0.7071611721611721

svm adres train  40 [1,1,0]

,tradaboost
acc,0.76
fms,0.6970129870129871

svm adres test  40 [1,1,0]


,tradaboost
acc,0.6739130434782609
fms,0.5714285714285714

lr adres test  45 [1,1,0]


,tradaboost
acc,0.7391304347826086
fms,0.6842105263157896

svm ccc ptt  45 [1,1,0]


,tradaboost
acc,0.6308868501529052
fms,0.6429385475492366

llr ccc ptt  45 [1,1,0]


,tradaboost
acc,0.6013761467889909
fms,0.639111460076508

llr  ptt ccc 45 [1,1,0]

,tradaboost
acc,0.7891107078039927
fms,0.6638561816652648

svm  ptt ccc 45 [1,1,0]

,tradaboost
acc,0.8548699334543255
fms,0.7386232011232011

lr  ccc adress test  [1,1,0]

,augment
acc,0.7659574468085106
fms,0.7027027027027025
              precision    recall  f1-score   support


      non-AD       0.70      0.96      0.81        24
          AD       0.93      0.57      0.70        23

    accuracy                           0.77        47
   macro avg       0.81      0.76      0.75        47
weighted avg       0.81      0.77      0.76        47

top weighted source only features woked best for adress train cv

###########################

lr adres train  45 [1,1,1]


,tradaboost
acc,0.759090909090909
fms,0.7307375957375957

svm adres train  45 [1,1,1]

,tradaboost
acc,0.6954545454545454
fms,0.6218437118437119

lr adres test  45 [1,1,1]

,tradaboost
acc,0.6956521739130435
fms,0.631578947368421

svm adres test  40 [1,1,1]

,tradaboost
acc,0.717391304347826
fms,0.5806451612903226

lr ccc ptt  45 [1,1,1]

,tradaboost
acc,0.549864084267754
fms,0.5540513113320216

svm ccc ptt  45 [1,1,1]

,tradaboost
acc,0.8237144585601935
fms,0.6923319923319924

lr  ptt  ccc 45 [1,1,1]

,tradaboost
acc,0.8375075620084693
fms,0.7134166424489006

svm  ptt  ccc 45 [1,1,1]


,tradaboost
acc,0.834119782214156
fms,0.7120827320827321

feat sect source ccc 50 lr augment

ccc adresstran [1,1,1]
lr
{'acc': 0.7400000000000001, 'fms': 0.7103646353646353}
svm
{'acc': 0.7872727272727273, 'fms': 0.7778021978021977}

feat sect source ccc 50  augment


50 feature selected
['# AUX (participant)', 'UP', '# PART (participant)', 'BrunetIndex', 'UVU', 'RatioCoordinate', 'stddurpause', 'MTLD (participant)', 'VPTypeRate', 'AvgNPTypeLengthEmbedded', 'MeanWordLength', 'DisfluencyFrequency', 'AvgPPTypeLengthNonEmbedded', '# ADP (participant)', '# tokens (participant)', 'skwdurvoiced', '# ADJ (participant)', 'RatioNoun', 'mindurpause', 'MSTTR (participant)', 'NP_to_PRP (participant)', 'skwdurpause', 'MATTR (participant)', 'proportion_below_threshold_0.5', '# INTJ (participant)', 'proportion_below_threshold_0.3', 'NPProportion', 'HD-D (participant)', 'mindurvoiced', '# named entities (participant)', 'PPTypeRate', '# NUM (participant)', 'kurtosisdurvoiced', 'tree_height (participant)', 'mindurunvoiced', 'NPTypeRate', 'avgdurunvoiced', 'kurtosisdurpause', '# utterances (participant)', '# PROPN (participant)', 'VP_to_VBG (participant)', '# ADV (participant)', 'stddurunvoiced', '# NOUN (participant)', '# CARDINAL (participant)', 'kurtosisdurunvoiced', 'maxdurvoiced', 'VP', 'ROOT_to_FRAG (participant)', 'VP_to_AUX_ADJP (participant)']
(289, 50)
(108, 50)
adresstest
50 feature selected
ekhane
['# AUX (participant)', 'UP', '# PART (participant)', 'BrunetIndex', 'UVU', 'RatioCoordinate', 'stddurpause', 'MTLD (participant)', 'VPTypeRate', 'AvgNPTypeLengthEmbedded', 'MeanWordLength', 'DisfluencyFrequency', 'AvgPPTypeLengthNonEmbedded', '# ADP (participant)', '# tokens (participant)', 'skwdurvoiced', '# ADJ (participant)', 'RatioNoun', 'mindurpause', 'MSTTR (participant)', 'NP_to_PRP (participant)', 'skwdurpause', 'MATTR (participant)', 'proportion_below_threshold_0.5', '# INTJ (participant)', 'proportion_below_threshold_0.3', 'NPProportion', 'HD-D (participant)', 'mindurvoiced', '# named entities (participant)', 'PPTypeRate', '# NUM (participant)', 'kurtosisdurvoiced', 'tree_height (participant)', 'mindurunvoiced', 'NPTypeRate', 'avgdurunvoiced', 'kurtosisdurpause', '# utterances (participant)', '# PROPN (participant)', 'VP_to_VBG (participant)', '# ADV (participant)', 'stddurunvoiced', '# NOUN (participant)', '# CARDINAL (participant)', 'kurtosisdurunvoiced', 'maxdurvoiced', 'VP', 'ROOT_to_FRAG (participant)', 'VP_to_AUX_ADJP (participant)']
hi
Model None
===========================
Running lr for param C 1.000000 

Training: augment
---------------------------

result for method augment param 1.000000 nest 0 source ['ccc'] target ['adress']
{'acc': 0.6521739130434783, 'fms': 0.5789473684210527}
{'acc': array([0.65217391]), 'fms': array([0.57894737])}
done
              precision    recall  f1-score   support

      non-AD       0.63      0.79      0.70        24
          AD       0.69      0.50      0.58        22

    accuracy                           0.65        46
   macro avg       0.66      0.65      0.64        46
weighted avg       0.66      0.65      0.64        46

Running svm for param C 1.000000 

Training: augment
---------------------------

result for method augment param 1.000000 nest 0 source ['ccc'] target ['adress']
{'acc': 0.6521739130434783, 'fms': 0.6190476190476191}
{'acc': array([0.65217391]), 'fms': array([0.61904762])}
done
              precision    recall  f1-score   support

      non-AD       0.65      0.71      0.68        24
          AD       0.65      0.59      0.62        22

    accuracy                           0.65        46
   macro avg       0.65      0.65      0.65        46
weighted avg       0.65      0.65      0.65        46


Process finished with exit code 0


###########################

multidomain

augment

no opt for multi in tradaboost
dann can't be converted to multi domain, error throws



['134-3', '134-2', '213-2', '134-1', '213-1', '144-0']

6
['144-0', '213-2', '134-2', '134-1', '134-3', '213-1']
4
['062-0', '062-3', '190-2', '190-1']

no audio
Teesdale_Georg_001.trs 120
Atkins_May_03.trs 365
Yarrow_Quill_001.trs 384
Yarrow_Milli_001.trs 383
Annan_Merle_01.trs 157
Annan_Merle_02.trs 158
Badger_Marsh_01 167
Yager_Hayes_001 378
Watkins_Moste_001 640
Atkins_May_01 364


############################################
81
generate audio features for these files
{'Alford_Martin_04', 'Tichenor_Cunar_001', 'Tichenor_Pardu_001', 'Appleby_Main--_04', 'Temes_Wash_001_02',
'Tatter_Allen_001', 'Tichenor_Payne_002', 'Walton_Caldw_001', 'Yarrow_Milli_001', 'Alford_Main_06', 'Tichenor_Page_001',
 'Atkins_May_01', 'Appleby_Main--_07', 'Tichenor_Good_002', 'Alford_Main_01', 'Tichenor_Litt_001',
 'Atherton_Masten_01', 'Tichenor_Lawre_002', 'Appleby_Manser_01', 'Appleby_Main--_02', 'Walton_Barth_001',
  'Annan_Merle_02', 'Appleby_Main--_03', 'Atherton_Masten_02', 'Adrian_Mans_09', 'Yarrow_Quill_001',
  'Alford_Main_07', 'Atherton_Merton_01', 'Appleby_Main--_01', 'Waite_Stefa_001_01', 'Tichenor_Longg_001',
  'Alsop_Mallery_02', 'Ascall_Mather_05', 'Tichenor_Over_001', 'Alford_Main_03', 'Alford_Main_02', 'Alford_Martin_01',
  'Adrian_Mans_02', 'Atherton_Masten_03', 'Tichenor_Knech_001', 'Yager_Hayes_001', 'Tichenor_Dolph_001_02', 'Tichenor_Good_001',
  'Appleby_Main--_06', 'Appleby_Main--_05', 'Alford_Martin_02', 'Ascall_Mather_04', 'Walton_Dingl_001', 'Ascall_Mather_06',
   'Adrian_Mans_05', 'Ascall_Mather_01', 'Atkins_May_03', 'Watkins_Moste_001', 'Tichenor_Litt_002', 'Alford_Main_04',
   'Annan_Merle_01', 'Alford_Main_05', 'Badger_Marsh_01', 'Ascall_Merton_02', 'Tichenor_Dolph_001_01', 'Ascall_Mather_02',
    'Ascall_Merton_08', 'Atherton_Merton_02', 'Ascall_Mather_07', 'Tichenor_Larac_002', 'Appleby_Manser_02', 'Tichenor_Sech_001',
     'Tichenor_Mart_001', 'Ascall_Merton_04', 'Adcock_Magoon_02', 'Atherton_Merton_03', 'Alford_Martin_03', 'Ascall_Merton_03',
     'Ascall_Merton_05', 'Alford_Martin_05', 'Teesdale_Georg_001', 'Ascall_Merton_07', 'Ascall_Mather_03', 'Tichenor_Payne_001',
     'Ascall_Merton_06', 'Ascall_Merton_01'}


audio and textgrid to

{
'Alford_Main_05', 'Adrian_Mans_05', 'Alford_Martin_02', 'Tichenor_Arth_001 (1)', 'Alford_Main_06',
 'Temes_Wash_001_02', 'Alsop_Mallery_02', 'Tichenor_Cunar_001', 'Waite_Stefa_001_01', 'Adrian_Mans_09',
 'Tatter_Allen_001', 'Alford_Main_02', 'Alford_Martin_05', 'Tichenor_Ambro_001 (1)', 'Alford_Main_03',
  'Alford_Main_07', 'Alford_Martin_01', 'Alford_Main_01', 'Adrian_Mans_02', 'Alford_Martin_03', 'Alford_Martin_04',
  'Alford_Main_04', 'Adcock_Magoon_02'
  }





adrc,ccc/db
percent source data in training 0.466
percent target data in training 0.534
************************************************************************
adrc,db/ccc

percent source data in training 0.726
percent target data in training 0.274

 non-AD       0.85      0.95      0.90       198
    AD       0.87      0.68      0.76       102

adrc,ccc/adress 10 fold
***************************************************************************
percent source data in training 0.798
percent target data in training 0.202

***************************************************************
ccc, adrc/adresstrain
test: adresstest


adrc
False
['# utterances (participant)', '# tokens (participant)', '# unique tokens (participant)', '# unique lemmas (participant)', '# ADJ (participant)', '# ADP (participant)', '# ADV (participant)', '# AUX (participant)', '# CCONJ (participant)', '# DET (participant)', '# INTJ (participant)', '# NOUN (participant)', '# NUM (participant)', '# PART (participant)', '# PRON (participant)', '# PROPN (participant)', '# PUNCT (participant)', '# SCONJ (participant)', '# VERB (participant)', '# named entities (participant)', '# unique named entities (participant)', '# CARDINAL (participant)', 'TTR (participant)', 'MSTTR (participant)', 'MATTR (participant)', 'Maas (participant)', 'MTLD (participant)', 'HD-D (participant)', 'SUBTLscore (participant)', 'tree_height (participant)', 'NP_to_PRP (participant)', 'NP_to_DT_NN (participant)', 'VP_to_VBG (participant)', 'INTJ_to_UH (participant)', 'ROOT_to_FRAG (participant)', 'VP_to_AUX_VP (participant)', 'VP_to_AUX_ADJP (participant)', 'VP_to_AUX (participant)', 'BrunetIndex', 'HonoreStatistic', 'MeanWordLength', 'DisfluencyFrequency', 'RatioNoun', 'RatioVerb', 'RatioPronoun', 'RatioCoordinate', 'NPTypeRate', 'VPTypeRate', 'PPTypeRate', 'PProportion', 'NPProportion', 'VPProportion', 'AvgNPTypeLengthEmbedded', 'AvgVPTypeLengthEmbedded', 'AvgPPTypeLengthEmbedded', 'AvgPPTypeLengthNonEmbedded', 'AvgNPTypeLengthNonEmbedded', 'AvgVPTypeLengthNonEmbedded']
ccc
False
['# utterances (participant)', '# tokens (participant)', '# unique tokens (participant)', '# unique lemmas (participant)', '# ADJ (participant)', '# ADP (participant)', '# ADV (participant)', '# AUX (participant)', '# CCONJ (participant)', '# DET (participant)', '# INTJ (participant)', '# NOUN (participant)', '# NUM (participant)', '# PART (participant)', '# PRON (participant)', '# PROPN (participant)', '# PUNCT (participant)', '# SCONJ (participant)', '# VERB (participant)', '# named entities (participant)', '# unique named entities (participant)', '# CARDINAL (participant)', 'TTR (participant)', 'MSTTR (participant)', 'MATTR (participant)', 'Maas (participant)', 'MTLD (participant)', 'HD-D (participant)', 'SUBTLscore (participant)', 'tree_height (participant)', 'NP_to_PRP (participant)', 'NP_to_DT_NN (participant)', 'VP_to_VBG (participant)', 'INTJ_to_UH (participant)', 'ROOT_to_FRAG (participant)', 'VP_to_AUX_VP (participant)', 'VP_to_AUX_ADJP (participant)', 'VP_to_AUX (participant)', 'BrunetIndex', 'HonoreStatistic', 'MeanWordLength', 'DisfluencyFrequency', 'RatioNoun', 'RatioVerb', 'RatioPronoun', 'RatioCoordinate', 'NPTypeRate', 'VPTypeRate', 'PPTypeRate', 'PProportion', 'NPProportion', 'VPProportion', 'AvgNPTypeLengthEmbedded', 'AvgVPTypeLengthEmbedded', 'AvgPPTypeLengthEmbedded', 'AvgPPTypeLengthNonEmbedded', 'AvgNPTypeLengthNonEmbedded', 'AvgVPTypeLengthNonEmbedded']
adress
False
['# utterances (participant)', '# tokens (participant)', '# unique tokens (participant)', '# unique lemmas (participant)', '# ADJ (participant)', '# ADP (participant)', '# ADV (participant)', '# AUX (participant)', '# CCONJ (participant)', '# DET (participant)', '# INTJ (participant)', '# NOUN (participant)', '# NUM (participant)', '# PART (participant)', '# PRON (participant)', '# PROPN (participant)', '# PUNCT (participant)', '# SCONJ (participant)', '# VERB (participant)', '# named entities (participant)', '# unique named entities (participant)', '# CARDINAL (participant)', 'TTR (participant)', 'MSTTR (participant)', 'MATTR (participant)', 'Maas (participant)', 'MTLD (participant)', 'HD-D (participant)', 'SUBTLscore (participant)', 'tree_height (participant)', 'NP_to_PRP (participant)', 'NP_to_DT_NN (participant)', 'VP_to_VBG (participant)', 'INTJ_to_UH (participant)', 'ROOT_to_FRAG (participant)', 'VP_to_AUX_VP (participant)', 'VP_to_AUX_ADJP (participant)', 'VP_to_AUX (participant)', 'BrunetIndex', 'HonoreStatistic', 'MeanWordLength', 'DisfluencyFrequency', 'RatioNoun', 'RatioVerb', 'RatioPronoun', 'RatioCoordinate', 'NPTypeRate', 'VPTypeRate', 'PPTypeRate', 'PProportion', 'NPProportion', 'VPProportion', 'AvgNPTypeLengthEmbedded', 'AvgVPTypeLengthEmbedded', 'AvgPPTypeLengthEmbedded', 'AvgPPTypeLengthNonEmbedded', 'AvgNPTypeLengthNonEmbedded', 'AvgVPTypeLengthNonEmbedded']
adresstest
ad
ekhane
['# utterances (participant)', '# tokens (participant)', '# unique tokens (participant)', '# unique lemmas (participant)', '# ADJ (participant)', '# ADP (participant)', '# ADV (participant)', '# AUX (participant)', '# CCONJ (participant)', '# DET (participant)', '# INTJ (participant)', '# NOUN (participant)', '# NUM (participant)', '# PART (participant)', '# PRON (participant)', '# PROPN (participant)', '# PUNCT (participant)', '# SCONJ (participant)', '# VERB (participant)', '# named entities (participant)', '# unique named entities (participant)', '# CARDINAL (participant)', 'TTR (participant)', 'MSTTR (participant)', 'MATTR (participant)', 'Maas (participant)', 'MTLD (participant)', 'HD-D (participant)', 'SUBTLscore (participant)', 'tree_height (participant)', 'NP_to_PRP (participant)', 'NP_to_DT_NN (participant)', 'VP_to_VBG (participant)', 'INTJ_to_UH (participant)', 'ROOT_to_FRAG (participant)', 'VP_to_AUX_VP (participant)', 'VP_to_AUX_ADJP (participant)', 'VP_to_AUX (participant)', 'BrunetIndex', 'HonoreStatistic', 'MeanWordLength', 'DisfluencyFrequency', 'RatioNoun', 'RatioVerb', 'RatioPronoun', 'RatioCoordinate', 'NPTypeRate', 'VPTypeRate', 'PPTypeRate', 'PProportion', 'NPProportion', 'VPProportion', 'AvgNPTypeLengthEmbedded', 'AvgVPTypeLengthEmbedded', 'AvgPPTypeLengthEmbedded', 'AvgPPTypeLengthNonEmbedded', 'AvgNPTypeLengthNonEmbedded', 'AvgVPTypeLengthNonEmbedded']
hi
Model None
===========================
Running lr for param C 0.200000

Training: multiaugment
---------------------------
percent source data in training 0.781
percent target data in training 0.219
Processing fold: 0
result for method multiaugment param 0.200000 source ['adrc', 'ccc'] target ['adress']
{'acc': 0.75, 'fms': 0.7000000000000001, 'roc': array([0.83159722])}
{'acc': array([0.75]), 'fms': array([0.7])}
done
done
              precision    recall  f1-score   support

      non-AD       0.69      0.92      0.79        24
          AD       0.88      0.58      0.70        24

    accuracy                           0.75        48
   macro avg       0.78      0.75      0.74        48
weighted avg       0.78      0.75      0.74        48

Running lr for param C 0.300000

Training: multiaugment
---------------------------
percent source data in training 0.781
percent target data in training 0.219
Processing fold: 0
result for method multiaugment param 0.300000 source ['adrc', 'ccc'] target ['adress']
{'acc': 0.75, 'fms': 0.7000000000000001, 'roc': array([0.83159722])}
{'acc': array([0.75]), 'fms': array([0.7])}
done
done
              precision    recall  f1-score   support

      non-AD       0.69      0.92      0.79        24
          AD       0.88      0.58      0.70        24

    accuracy                           0.75        48
   macro avg       0.78      0.75      0.74        48
weighted avg       0.78      0.75      0.74        48

Running lr for param C 1.000000

Training: multiaugment
---------------------------
percent source data in training 0.781
percent target data in training 0.219
Processing fold: 0
result for method multiaugment param 1.000000 source ['adrc', 'ccc'] target ['adress']
{'acc': 0.7708333333333334, 'fms': 0.7179487179487181, 'roc': array([0.82291667])}
{'acc': array([0.77083333]), 'fms': array([0.71794872])}
done
done
              precision    recall  f1-score   support

      non-AD       0.70      0.96      0.81        24
          AD       0.93      0.58      0.72        24

    accuracy                           0.77        48
   macro avg       0.82      0.77      0.76        48
weighted avg       0.82      0.77      0.76        48

Running svm for param C 0.200000

Training: multiaugment
---------------------------
percent source data in training 0.781
percent target data in training 0.219
Processing fold: 0
result for method multiaugment param 0.200000 source ['adrc', 'ccc'] target ['adress']
{'acc': 0.7291666666666666, 'fms': 0.723404255319149, 'roc': array([0.83506944])}
{'acc': array([0.72916667]), 'fms': array([0.72340426])}
done
done
              precision    recall  f1-score   support

      non-AD       0.72      0.75      0.73        24
          AD       0.74      0.71      0.72        24

    accuracy                           0.73        48
   macro avg       0.73      0.73      0.73        48
weighted avg       0.73      0.73      0.73        48

Running svm for param C 0.300000

Training: multiaugment
---------------------------
percent source data in training 0.781
percent target data in training 0.219
Processing fold: 0
result for method multiaugment param 0.300000 source ['adrc', 'ccc'] target ['adress']
{'acc': 0.7083333333333334, 'fms': 0.6818181818181818, 'roc': array([0.83333333])}
{'acc': array([0.70833333]), 'fms': array([0.68181818])}
done
done
              precision    recall  f1-score   support

      non-AD       0.68      0.79      0.73        24
          AD       0.75      0.62      0.68        24

    accuracy                           0.71        48
   macro avg       0.71      0.71      0.71        48
weighted avg       0.71      0.71      0.71        48

Running svm for param C 1.000000

Training: multiaugment
---------------------------
percent source data in training 0.781
percent target data in training 0.219
Processing fold: 0
result for method multiaugment param 1.000000 source ['adrc', 'ccc'] target ['adress']
{'acc': 0.6875, 'fms': 0.6341463414634146, 'roc': array([0.82118056])}
{'acc': array([0.6875]), 'fms': array([0.63414634])}
done
done
              precision    recall  f1-score   support

      non-AD       0.65      0.83      0.73        24
          AD       0.76      0.54      0.63        24

    accuracy                           0.69        48
   macro avg       0.70      0.69      0.68        48
weighted avg       0.70      0.69      0.68        48


Process finished with exit code 0
 *********************************************************************************************




 #################################################################################################
 E:\DA_detection_AD\da\Scripts\python.exe E:/DA_detection_AD/code_da/domain_adapt.py
ccc
False
['# utterances (participant)', '# tokens (participant)', '# unique tokens (participant)', '# unique lemmas (participant)', '# ADJ (participant)', '# ADP (participant)', '# ADV (participant)', '# AUX (participant)', '# CCONJ (participant)', '# DET (participant)', '# INTJ (participant)', '# NOUN (participant)', '# NUM (participant)', '# PART (participant)', '# PRON (participant)', '# PROPN (participant)', '# PUNCT (participant)', '# SCONJ (participant)', '# VERB (participant)', '# named entities (participant)', '# unique named entities (participant)', '# CARDINAL (participant)', 'TTR (participant)', 'MSTTR (participant)', 'MATTR (participant)', 'Maas (participant)', 'MTLD (participant)', 'HD-D (participant)', 'SUBTLscore (participant)', 'tree_height (participant)', 'NP_to_PRP (participant)', 'NP_to_DT_NN (participant)', 'VP_to_VBG (participant)', 'INTJ_to_UH (participant)', 'ROOT_to_FRAG (participant)', 'VP_to_AUX_VP (participant)', 'VP_to_AUX_ADJP (participant)', 'VP_to_AUX (participant)', 'BrunetIndex', 'HonoreStatistic', 'MeanWordLength', 'DisfluencyFrequency', 'RatioNoun', 'RatioVerb', 'RatioPronoun', 'RatioCoordinate', 'NPTypeRate', 'VPTypeRate', 'PPTypeRate', 'PProportion', 'NPProportion', 'VPProportion', 'AvgNPTypeLengthEmbedded', 'AvgVPTypeLengthEmbedded', 'AvgPPTypeLengthEmbedded', 'AvgPPTypeLengthNonEmbedded', 'AvgNPTypeLengthNonEmbedded', 'AvgVPTypeLengthNonEmbedded']
pitt
False
['# utterances (participant)', '# tokens (participant)', '# unique tokens (participant)', '# unique lemmas (participant)', '# ADJ (participant)', '# ADP (participant)', '# ADV (participant)', '# AUX (participant)', '# CCONJ (participant)', '# DET (participant)', '# INTJ (participant)', '# NOUN (participant)', '# NUM (participant)', '# PART (participant)', '# PRON (participant)', '# PROPN (participant)', '# PUNCT (participant)', '# SCONJ (participant)', '# VERB (participant)', '# named entities (participant)', '# unique named entities (participant)', '# CARDINAL (participant)', 'TTR (participant)', 'MSTTR (participant)', 'MATTR (participant)', 'Maas (participant)', 'MTLD (participant)', 'HD-D (participant)', 'SUBTLscore (participant)', 'tree_height (participant)', 'NP_to_PRP (participant)', 'NP_to_DT_NN (participant)', 'VP_to_VBG (participant)', 'INTJ_to_UH (participant)', 'ROOT_to_FRAG (participant)', 'VP_to_AUX_VP (participant)', 'VP_to_AUX_ADJP (participant)', 'VP_to_AUX (participant)', 'BrunetIndex', 'HonoreStatistic', 'MeanWordLength', 'DisfluencyFrequency', 'RatioNoun', 'RatioVerb', 'RatioPronoun', 'RatioCoordinate', 'NPTypeRate', 'VPTypeRate', 'PPTypeRate', 'PProportion', 'NPProportion', 'VPProportion', 'AvgNPTypeLengthEmbedded', 'AvgVPTypeLengthEmbedded', 'AvgPPTypeLengthEmbedded', 'AvgPPTypeLengthNonEmbedded', 'AvgNPTypeLengthNonEmbedded', 'AvgVPTypeLengthNonEmbedded']
Model None
===========================
Running lr for param C 0.200000

Training: source_only
---------------------------
percent source data in training nan
percent target data in training nan
Processing fold: 0
E:\DA_detection_AD\da\lib\site-packages\numpy\core\fromnumeric.py:3441: RuntimeWarning: Mean of empty slice.
  out=out, **kwargs)
E:\DA_detection_AD\da\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 1
Processing fold: 2
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 3
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 4
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
result for method source_only param 0.200000 source ['ccc'] target ['pitt']
{'acc': 0.4456511056511056, 'fms': 0.019047619047619046, 'roc': array([0.62557856])}
{'acc': array([0.45045045, 0.44144144, 0.44545455, 0.44545455, 0.44545455]), 'fms': array([0.03174603, 0.        , 0.03174603, 0.03174603, 0.        ])}
done
done
              precision    recall  f1-score   support

      non-AD       0.44      1.00      0.61       243
          AD       1.00      0.01      0.02       309

    accuracy                           0.45       552
   macro avg       0.72      0.50      0.32       552
weighted avg       0.75      0.45      0.28       552

Running lr for param C 0.300000

Training: source_only
---------------------------
E:\DA_detection_AD\da\lib\site-packages\numpy\core\fromnumeric.py:3441: RuntimeWarning: Mean of empty slice.
  out=out, **kwargs)
E:\DA_detection_AD\da\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
percent source data in training nan
percent target data in training nan
Processing fold: 0
Processing fold: 1
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 2
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 3
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 4
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
result for method source_only param 0.300000 source ['ccc'] target ['pitt']
{'acc': 0.4456511056511056, 'fms': 0.019047619047619046, 'roc': array([0.62149135])}
{'acc': array([0.44144144, 0.45045045, 0.44545455, 0.44545455, 0.44545455]), 'fms': array([0.        , 0.03174603, 0.03174603, 0.03174603, 0.        ])}
done
done
              precision    recall  f1-score   support

      non-AD       0.44      1.00      0.61       243
          AD       1.00      0.01      0.02       309

    accuracy                           0.45       552
   macro avg       0.72      0.50      0.32       552
weighted avg       0.75      0.45      0.28       552

Running lr for param C 1.000000

Training: source_only
---------------------------
E:\DA_detection_AD\da\lib\site-packages\numpy\core\fromnumeric.py:3441: RuntimeWarning: Mean of empty slice.
  out=out, **kwargs)
E:\DA_detection_AD\da\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
percent source data in training nan
percent target data in training nan
Processing fold: 0
Processing fold: 1
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 2
Processing fold: 3
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 4
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
result for method source_only param 1.000000 source ['ccc'] target ['pitt']
{'acc': 0.4438329238329238, 'fms': 0.012698412698412698, 'roc': array([0.6041443])}
{'acc': array([0.44144144, 0.45045045, 0.43636364, 0.44545455, 0.44545455]), 'fms': array([0.        , 0.03174603, 0.        , 0.03174603, 0.        ])}
done
done
              precision    recall  f1-score   support

      non-AD       0.44      1.00      0.61       243
          AD       1.00      0.01      0.01       309

    accuracy                           0.44       552
   macro avg       0.72      0.50      0.31       552
weighted avg       0.75      0.44      0.28       552

Running svm for param C 0.200000

Training: source_only
---------------------------
E:\DA_detection_AD\da\lib\site-packages\numpy\core\fromnumeric.py:3441: RuntimeWarning: Mean of empty slice.
  out=out, **kwargs)
E:\DA_detection_AD\da\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
percent source data in training nan
percent target data in training nan
Processing fold: 0
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 1
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 2
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 3
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 4
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
result for method source_only param 0.200000 source ['ccc'] target ['pitt']
{'acc': 0.4438329238329238, 'fms': 0.012698412698412698, 'roc': array([0.62825366])}
{'acc': array([0.45045045, 0.44144144, 0.43636364, 0.44545455, 0.44545455]), 'fms': array([0.03174603, 0.        , 0.        , 0.03174603, 0.        ])}
done
done
              precision    recall  f1-score   support

      non-AD       0.44      1.00      0.61       243
          AD       1.00      0.01      0.01       309

    accuracy                           0.44       552
   macro avg       0.72      0.50      0.31       552
weighted avg       0.75      0.44      0.28       552

Running svm for param C 0.300000

Training: source_only
---------------------------
percent source data in training nan
percent target data in training nan
Processing fold: 0
E:\DA_detection_AD\da\lib\site-packages\numpy\core\fromnumeric.py:3441: RuntimeWarning: Mean of empty slice.
  out=out, **kwargs)
E:\DA_detection_AD\da\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 1
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 2
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 3
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 4
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
result for method source_only param 0.300000 source ['ccc'] target ['pitt']
{'acc': 0.4438329238329238, 'fms': 0.012698412698412698, 'roc': array([0.63434862])}
{'acc': array([0.45045045, 0.44144144, 0.43636364, 0.44545455, 0.44545455]), 'fms': array([0.03174603, 0.        , 0.        , 0.03174603, 0.        ])}
done
done
              precision    recall  f1-score   support

      non-AD       0.44      1.00      0.61       243
          AD       1.00      0.01      0.01       309

    accuracy                           0.44       552
   macro avg       0.72      0.50      0.31       552
weighted avg       0.75      0.44      0.28       552

Running svm for param C 1.000000

Training: source_only
---------------------------
percent source data in training nan
percent target data in training nan
Processing fold: 0
E:\DA_detection_AD\da\lib\site-packages\numpy\core\fromnumeric.py:3441: RuntimeWarning: Mean of empty slice.
  out=out, **kwargs)
E:\DA_detection_AD\da\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 1
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 2
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 3
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 4
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
result for method source_only param 1.000000 source ['ccc'] target ['pitt']
{'acc': 0.442031122031122, 'fms': 0.006349206349206349, 'roc': array([0.61586188])}
{'acc': array([0.44144144, 0.44144144, 0.43636364, 0.44545455, 0.44545455]), 'fms': array([0.        , 0.        , 0.        , 0.03174603, 0.        ])}
done
done
              precision    recall  f1-score   support

      non-AD       0.44      1.00      0.61       243
          AD       1.00      0.00      0.01       309

    accuracy                           0.44       552
   macro avg       0.72      0.50      0.31       552
weighted avg       0.75      0.44      0.27       552


Process finished with exit code 0




#######################abar source_only#################################################
########################################################################################

E:\DA_detection_AD\da\Scripts\python.exe E:/DA_detection_AD/code_da/domain_adapt.py
pitt
False
['# utterances (participant)', '# tokens (participant)', '# unique tokens (participant)', '# unique lemmas (participant)', '# ADJ (participant)', '# ADP (participant)', '# ADV (participant)', '# AUX (participant)', '# CCONJ (participant)', '# DET (participant)', '# INTJ (participant)', '# NOUN (participant)', '# NUM (participant)', '# PART (participant)', '# PRON (participant)', '# PROPN (participant)', '# PUNCT (participant)', '# SCONJ (participant)', '# VERB (participant)', '# named entities (participant)', '# unique named entities (participant)', '# CARDINAL (participant)', 'TTR (participant)', 'MSTTR (participant)', 'MATTR (participant)', 'Maas (participant)', 'MTLD (participant)', 'HD-D (participant)', 'SUBTLscore (participant)', 'tree_height (participant)', 'NP_to_PRP (participant)', 'NP_to_DT_NN (participant)', 'VP_to_VBG (participant)', 'INTJ_to_UH (participant)', 'ROOT_to_FRAG (participant)', 'VP_to_AUX_VP (participant)', 'VP_to_AUX_ADJP (participant)', 'VP_to_AUX (participant)', 'BrunetIndex', 'HonoreStatistic', 'MeanWordLength', 'DisfluencyFrequency', 'RatioNoun', 'RatioVerb', 'RatioPronoun', 'RatioCoordinate', 'NPTypeRate', 'VPTypeRate', 'PPTypeRate', 'PProportion', 'NPProportion', 'VPProportion', 'AvgNPTypeLengthEmbedded', 'AvgVPTypeLengthEmbedded', 'AvgPPTypeLengthEmbedded', 'AvgPPTypeLengthNonEmbedded', 'AvgNPTypeLengthNonEmbedded', 'AvgVPTypeLengthNonEmbedded']
ccc
False
['# utterances (participant)', '# tokens (participant)', '# unique tokens (participant)', '# unique lemmas (participant)', '# ADJ (participant)', '# ADP (participant)', '# ADV (participant)', '# AUX (participant)', '# CCONJ (participant)', '# DET (participant)', '# INTJ (participant)', '# NOUN (participant)', '# NUM (participant)', '# PART (participant)', '# PRON (participant)', '# PROPN (participant)', '# PUNCT (participant)', '# SCONJ (participant)', '# VERB (participant)', '# named entities (participant)', '# unique named entities (participant)', '# CARDINAL (participant)', 'TTR (participant)', 'MSTTR (participant)', 'MATTR (participant)', 'Maas (participant)', 'MTLD (participant)', 'HD-D (participant)', 'SUBTLscore (participant)', 'tree_height (participant)', 'NP_to_PRP (participant)', 'NP_to_DT_NN (participant)', 'VP_to_VBG (participant)', 'INTJ_to_UH (participant)', 'ROOT_to_FRAG (participant)', 'VP_to_AUX_VP (participant)', 'VP_to_AUX_ADJP (participant)', 'VP_to_AUX (participant)', 'BrunetIndex', 'HonoreStatistic', 'MeanWordLength', 'DisfluencyFrequency', 'RatioNoun', 'RatioVerb', 'RatioPronoun', 'RatioCoordinate', 'NPTypeRate', 'VPTypeRate', 'PPTypeRate', 'PProportion', 'NPProportion', 'VPProportion', 'AvgNPTypeLengthEmbedded', 'AvgVPTypeLengthEmbedded', 'AvgPPTypeLengthEmbedded', 'AvgPPTypeLengthNonEmbedded', 'AvgNPTypeLengthNonEmbedded', 'AvgVPTypeLengthNonEmbedded']
Model None
===========================
Running lr for param C 0.200000

Training: source_only
---------------------------
E:\DA_detection_AD\da\lib\site-packages\numpy\core\fromnumeric.py:3441: RuntimeWarning: Mean of empty slice.
  out=out, **kwargs)
E:\DA_detection_AD\da\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
percent source data in training nan
percent target data in training nan
Processing fold: 0
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 1
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 2
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 3
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 4
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
result for method source_only param 0.200000 source ['pitt'] target ['ccc']
{'acc': 0.45999999999999996, 'fms': 0.4556568103942447, 'roc': array([0.5179478])}
{'acc': array([0.33333333, 0.5       , 0.58333333, 0.55      , 0.33333333]), 'fms': array([0.45945946, 0.51612903, 0.41860465, 0.50909091, 0.375     ])}
done
done
              precision    recall  f1-score   support

      non-AD       0.67      0.35      0.46       198
          AD       0.35      0.67      0.46       102

    accuracy                           0.46       300
   macro avg       0.51      0.51      0.46       300
weighted avg       0.56      0.46      0.46       300

Running lr for param C 0.300000

Training: source_only
---------------------------
percent source data in training nan
percent target data in training nan
Processing fold: 0
E:\DA_detection_AD\da\lib\site-packages\numpy\core\fromnumeric.py:3441: RuntimeWarning: Mean of empty slice.
  out=out, **kwargs)
E:\DA_detection_AD\da\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 1
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 2
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 3
Processing fold: 4
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
result for method source_only param 0.300000 source ['pitt'] target ['ccc']
{'acc': 0.47333333333333333, 'fms': 0.51533473270021, 'roc': array([0.58055983])}
{'acc': array([0.35      , 0.48333333, 0.51666667, 0.65      , 0.36666667]), 'fms': array([0.48      , 0.52307692, 0.43137255, 0.6557377 , 0.48648649])}
done
done
              precision    recall  f1-score   support

      non-AD       0.76      0.29      0.42       198
          AD       0.38      0.82      0.52       102

    accuracy                           0.47       300
   macro avg       0.57      0.56      0.47       300
weighted avg       0.63      0.47      0.45       300

Running lr for param C 1.000000

Training: source_only
---------------------------
percent source data in training nan
percent target data in training nan
Processing fold: 0
E:\DA_detection_AD\da\lib\site-packages\numpy\core\fromnumeric.py:3441: RuntimeWarning: Mean of empty slice.
  out=out, **kwargs)
E:\DA_detection_AD\da\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 1
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 2
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 3
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 4
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
result for method source_only param 1.000000 source ['pitt'] target ['ccc']
{'acc': 0.3966666666666666, 'fms': 0.5087521545479273, 'roc': array([0.67671306])}
{'acc': array([0.35      , 0.43333333, 0.35      , 0.51666667, 0.33333333]), 'fms': array([0.50632911, 0.55263158, 0.41791045, 0.57971014, 0.48717949])}
done
done
              precision    recall  f1-score   support

      non-AD       0.76      0.13      0.22       198
          AD       0.35      0.92      0.51       102

    accuracy                           0.40       300
   macro avg       0.55      0.52      0.36       300
weighted avg       0.62      0.40      0.32       300

Running svm for param C 0.200000

Training: source_only
---------------------------
percent source data in training nan
percent target data in training nan
Processing fold: 0
E:\DA_detection_AD\da\lib\site-packages\numpy\core\fromnumeric.py:3441: RuntimeWarning: Mean of empty slice.
  out=out, **kwargs)
E:\DA_detection_AD\da\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 1
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 2
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 3
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 4
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
result for method source_only param 0.200000 source ['pitt'] target ['ccc']
{'acc': 0.3633333333333333, 'fms': 0.5142168142168142, 'roc': array([0.72041819])}
{'acc': array([0.35      , 0.35      , 0.35      , 0.43333333, 0.33333333]), 'fms': array([0.51851852, 0.51851852, 0.49350649, 0.54054054, 0.5       ])}
done
done
              precision    recall  f1-score   support

      non-AD       0.89      0.04      0.08       198
          AD       0.35      0.99      0.51       102

    accuracy                           0.36       300
   macro avg       0.62      0.52      0.30       300
weighted avg       0.70      0.36      0.23       300

Running svm for param C 0.300000

Training: source_only
---------------------------
percent source data in training nan
percent target data in training nan
Processing fold: 0
E:\DA_detection_AD\da\lib\site-packages\numpy\core\fromnumeric.py:3441: RuntimeWarning: Mean of empty slice.
  out=out, **kwargs)
E:\DA_detection_AD\da\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 1
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 2
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 3
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 4
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
result for method source_only param 0.300000 source ['pitt'] target ['ccc']
{'acc': 0.37333333333333335, 'fms': 0.5183231574249435, 'roc': array([0.70283898])}
{'acc': array([0.35      , 0.38333333, 0.35      , 0.45      , 0.33333333]), 'fms': array([0.51851852, 0.53164557, 0.49350649, 0.54794521, 0.5       ])}
done
done
              precision    recall  f1-score   support

      non-AD       0.92      0.06      0.10       198
          AD       0.35      0.99      0.52       102

    accuracy                           0.37       300
   macro avg       0.63      0.52      0.31       300
weighted avg       0.72      0.37      0.25       300

Running svm for param C 1.000000

Training: source_only
---------------------------
percent source data in training nan
percent target data in training nan
Processing fold: 0
E:\DA_detection_AD\da\lib\site-packages\numpy\core\fromnumeric.py:3441: RuntimeWarning: Mean of empty slice.
  out=out, **kwargs)
E:\DA_detection_AD\da\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 1
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 2
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 3
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
Processing fold: 4
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
E:\DA_detection_AD\da\lib\site-packages\sklearn\base.py:451: UserWarning: X does not have valid feature names, but StandardScaler was fitted with feature names
  "X does not have valid feature names, but"
result for method source_only param 1.000000 source ['pitt'] target ['ccc']
{'acc': 0.3733333333333333, 'fms': 0.507810046911833, 'roc': array([0.68376038])}
{'acc': array([0.38333333, 0.36666667, 0.33333333, 0.45      , 0.33333333]), 'fms': array([0.53164557, 0.51282051, 0.45945946, 0.54794521, 0.48717949])}
done
done
              precision    recall  f1-score   support

      non-AD       0.75      0.08      0.14       198
          AD       0.35      0.95      0.51       102

    accuracy                           0.37       300
   macro avg       0.55      0.51      0.32       300
weighted avg       0.61      0.37      0.26       300


Process finished with exit code 0
##########################################################################
dann
bad perf. on single source, couldn't work it on multi source
best result lr of feature encoder=0.1,
increasing lr of feature encoder might boost performance
###############################################################################

#feature based: fmmd
works with ridge classifier with linear, rbf kernel, problem wth poly kernel, lr model, ridge kernel, svc works for single fold

# instance based:TRadaboost,balancedweighting---to do next
works better than dann, fmmd
svc poly kernel with lr 1 works better. increasing n_estimator=30 (pitt, ccc)
svc poly kernel with lr 1 works better. increasing n_estimator=30 (ccc, pitt)

,tradaboost
acc,0.8200000000000001
fms,0.7053202050020713
#parameter based=linint --- to do next